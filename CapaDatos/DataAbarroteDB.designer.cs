#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AbarroteDB")]
	public partial class DataAbarroteDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    partial void InsertSaldos(Saldos instance);
    partial void UpdateSaldos(Saldos instance);
    partial void DeleteSaldos(Saldos instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertMovimientosDinero(MovimientosDinero instance);
    partial void UpdateMovimientosDinero(MovimientosDinero instance);
    partial void DeleteMovimientosDinero(MovimientosDinero instance);
    partial void InsertInventario(Inventario instance);
    partial void UpdateInventario(Inventario instance);
    partial void DeleteInventario(Inventario instance);
    partial void InsertDetalleVenta(DetalleVenta instance);
    partial void UpdateDetalleVenta(DetalleVenta instance);
    partial void DeleteDetalleVenta(DetalleVenta instance);
    partial void InsertDetalleInventario(DetalleInventario instance);
    partial void UpdateDetalleInventario(DetalleInventario instance);
    partial void DeleteDetalleInventario(DetalleInventario instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertAuditoria(Auditoria instance);
    partial void UpdateAuditoria(Auditoria instance);
    partial void DeleteAuditoria(Auditoria instance);
    #endregion
		
		public DataAbarroteDBDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.AbarroteDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAbarroteDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAbarroteDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAbarroteDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAbarroteDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Venta> Venta
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
		
		public System.Data.Linq.Table<Saldos> Saldos
		{
			get
			{
				return this.GetTable<Saldos>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedor
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<MovimientosDinero> MovimientosDinero
		{
			get
			{
				return this.GetTable<MovimientosDinero>();
			}
		}
		
		public System.Data.Linq.Table<Inventario> Inventario
		{
			get
			{
				return this.GetTable<Inventario>();
			}
		}
		
		public System.Data.Linq.Table<DetalleVenta> DetalleVenta
		{
			get
			{
				return this.GetTable<DetalleVenta>();
			}
		}
		
		public System.Data.Linq.Table<DetalleInventario> DetalleInventario
		{
			get
			{
				return this.GetTable<DetalleInventario>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Auditoria> Auditoria
		{
			get
			{
				return this.GetTable<Auditoria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Venta;
		
		private System.DateTime _Fecha;
		
		private decimal _Importe;
		
		private decimal _Iva;
		
		private decimal _Total;
		
		private string _Metodo_Pago;
		
		private System.Nullable<int> _ID_Cliente;
		
		private EntitySet<DetalleVenta> _DetalleVenta;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_VentaChanging(int value);
    partial void OnID_VentaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnImporteChanging(decimal value);
    partial void OnImporteChanged();
    partial void OnIvaChanging(decimal value);
    partial void OnIvaChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnMetodo_PagoChanging(string value);
    partial void OnMetodo_PagoChanged();
    partial void OnID_ClienteChanging(System.Nullable<int> value);
    partial void OnID_ClienteChanged();
    #endregion
		
		public Venta()
		{
			this._DetalleVenta = new EntitySet<DetalleVenta>(new Action<DetalleVenta>(this.attach_DetalleVenta), new Action<DetalleVenta>(this.detach_DetalleVenta));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Venta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Venta
		{
			get
			{
				return this._ID_Venta;
			}
			set
			{
				if ((this._ID_Venta != value))
				{
					this.OnID_VentaChanging(value);
					this.SendPropertyChanging();
					this._ID_Venta = value;
					this.SendPropertyChanged("ID_Venta");
					this.OnID_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importe", DbType="Decimal(10,2) NOT NULL")]
		public decimal Importe
		{
			get
			{
				return this._Importe;
			}
			set
			{
				if ((this._Importe != value))
				{
					this.OnImporteChanging(value);
					this.SendPropertyChanging();
					this._Importe = value;
					this.SendPropertyChanged("Importe");
					this.OnImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iva", DbType="Decimal(10,2) NOT NULL")]
		public decimal Iva
		{
			get
			{
				return this._Iva;
			}
			set
			{
				if ((this._Iva != value))
				{
					this.OnIvaChanging(value);
					this.SendPropertyChanging();
					this._Iva = value;
					this.SendPropertyChanged("Iva");
					this.OnIvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metodo_Pago", DbType="VarChar(50)")]
		public string Metodo_Pago
		{
			get
			{
				return this._Metodo_Pago;
			}
			set
			{
				if ((this._Metodo_Pago != value))
				{
					this.OnMetodo_PagoChanging(value);
					this.SendPropertyChanging();
					this._Metodo_Pago = value;
					this.SendPropertyChanged("Metodo_Pago");
					this.OnMetodo_PagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", DbType="Int")]
		public System.Nullable<int> ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_DetalleVenta", Storage="_DetalleVenta", ThisKey="ID_Venta", OtherKey="ID_Venta")]
		public EntitySet<DetalleVenta> DetalleVenta
		{
			get
			{
				return this._DetalleVenta;
			}
			set
			{
				this._DetalleVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Cliente", ThisKey="ID_Cliente", OtherKey="ID_Cliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._ID_Cliente = value.ID_Cliente;
					}
					else
					{
						this._ID_Cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleVenta(DetalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_DetalleVenta(DetalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Saldos")]
	public partial class Saldos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Saldo;
		
		private System.Nullable<int> _ID_Producto;
		
		private int _Cantidad_Entrante;
		
		private int _Cantidad_Salida;
		
		private System.Nullable<int> _Cantidad_Disponible;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SaldoChanging(int value);
    partial void OnID_SaldoChanged();
    partial void OnID_ProductoChanging(System.Nullable<int> value);
    partial void OnID_ProductoChanged();
    partial void OnCantidad_EntranteChanging(int value);
    partial void OnCantidad_EntranteChanged();
    partial void OnCantidad_SalidaChanging(int value);
    partial void OnCantidad_SalidaChanged();
    partial void OnCantidad_DisponibleChanging(System.Nullable<int> value);
    partial void OnCantidad_DisponibleChanged();
    #endregion
		
		public Saldos()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Saldo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Saldo
		{
			get
			{
				return this._ID_Saldo;
			}
			set
			{
				if ((this._ID_Saldo != value))
				{
					this.OnID_SaldoChanging(value);
					this.SendPropertyChanging();
					this._ID_Saldo = value;
					this.SendPropertyChanged("ID_Saldo");
					this.OnID_SaldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", DbType="Int")]
		public System.Nullable<int> ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad_Entrante", DbType="Int NOT NULL")]
		public int Cantidad_Entrante
		{
			get
			{
				return this._Cantidad_Entrante;
			}
			set
			{
				if ((this._Cantidad_Entrante != value))
				{
					this.OnCantidad_EntranteChanging(value);
					this.SendPropertyChanging();
					this._Cantidad_Entrante = value;
					this.SendPropertyChanged("Cantidad_Entrante");
					this.OnCantidad_EntranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad_Salida", DbType="Int NOT NULL")]
		public int Cantidad_Salida
		{
			get
			{
				return this._Cantidad_Salida;
			}
			set
			{
				if ((this._Cantidad_Salida != value))
				{
					this.OnCantidad_SalidaChanging(value);
					this.SendPropertyChanging();
					this._Cantidad_Salida = value;
					this.SendPropertyChanged("Cantidad_Salida");
					this.OnCantidad_SalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad_Disponible", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Cantidad_Disponible
		{
			get
			{
				return this._Cantidad_Disponible;
			}
			set
			{
				if ((this._Cantidad_Disponible != value))
				{
					this.OnCantidad_DisponibleChanging(value);
					this.SendPropertyChanging();
					this._Cantidad_Disponible = value;
					this.SendPropertyChanged("Cantidad_Disponible");
					this.OnCantidad_DisponibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Saldos", Storage="_Producto", ThisKey="ID_Producto", OtherKey="ID_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Saldos.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Saldos.Add(this);
						this._ID_Producto = value.ID_Producto;
					}
					else
					{
						this._ID_Producto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Proveedor;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private EntitySet<Producto> _Producto;
		
		private EntitySet<Inventario> _Inventario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProveedorChanging(int value);
    partial void OnID_ProveedorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
		
		public Proveedor()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			this._Inventario = new EntitySet<Inventario>(new Action<Inventario>(this.attach_Inventario), new Action<Inventario>(this.detach_Inventario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proveedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Proveedor
		{
			get
			{
				return this._ID_Proveedor;
			}
			set
			{
				if ((this._ID_Proveedor != value))
				{
					this.OnID_ProveedorChanging(value);
					this.SendPropertyChanging();
					this._ID_Proveedor = value;
					this.SendPropertyChanged("ID_Proveedor");
					this.OnID_ProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(255)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Producto", ThisKey="ID_Proveedor", OtherKey="ID_Proveedor")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Inventario", Storage="_Inventario", ThisKey="ID_Proveedor", OtherKey="ID_Proveedor")]
		public EntitySet<Inventario> Inventario
		{
			get
			{
				return this._Inventario;
			}
			set
			{
				this._Inventario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
		
		private void attach_Inventario(Inventario entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Inventario(Inventario entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Producto;
		
		private string _Nombre;
		
		private decimal _Precio;
		
		private string _Descripcion;
		
		private System.Nullable<int> _ID_Proveedor;
		
		private EntitySet<Saldos> _Saldos;
		
		private EntitySet<DetalleVenta> _DetalleVenta;
		
		private EntitySet<DetalleInventario> _DetalleInventario;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProductoChanging(int value);
    partial void OnID_ProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnID_ProveedorChanging(System.Nullable<int> value);
    partial void OnID_ProveedorChanged();
    #endregion
		
		public Producto()
		{
			this._Saldos = new EntitySet<Saldos>(new Action<Saldos>(this.attach_Saldos), new Action<Saldos>(this.detach_Saldos));
			this._DetalleVenta = new EntitySet<DetalleVenta>(new Action<DetalleVenta>(this.attach_DetalleVenta), new Action<DetalleVenta>(this.detach_DetalleVenta));
			this._DetalleInventario = new EntitySet<DetalleInventario>(new Action<DetalleInventario>(this.attach_DetalleInventario), new Action<DetalleInventario>(this.detach_DetalleInventario));
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(10,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(255)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proveedor", DbType="Int")]
		public System.Nullable<int> ID_Proveedor
		{
			get
			{
				return this._ID_Proveedor;
			}
			set
			{
				if ((this._ID_Proveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProveedorChanging(value);
					this.SendPropertyChanging();
					this._ID_Proveedor = value;
					this.SendPropertyChanged("ID_Proveedor");
					this.OnID_ProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Saldos", Storage="_Saldos", ThisKey="ID_Producto", OtherKey="ID_Producto")]
		public EntitySet<Saldos> Saldos
		{
			get
			{
				return this._Saldos;
			}
			set
			{
				this._Saldos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleVenta", Storage="_DetalleVenta", ThisKey="ID_Producto", OtherKey="ID_Producto")]
		public EntitySet<DetalleVenta> DetalleVenta
		{
			get
			{
				return this._DetalleVenta;
			}
			set
			{
				this._DetalleVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleInventario", Storage="_DetalleInventario", ThisKey="ID_Producto", OtherKey="ID_Producto")]
		public EntitySet<DetalleInventario> DetalleInventario
		{
			get
			{
				return this._DetalleInventario;
			}
			set
			{
				this._DetalleInventario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Proveedor", ThisKey="ID_Proveedor", OtherKey="ID_Proveedor", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._ID_Proveedor = value.ID_Proveedor;
					}
					else
					{
						this._ID_Proveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saldos(Saldos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Saldos(Saldos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_DetalleVenta(DetalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_DetalleVenta(DetalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_DetalleInventario(DetalleInventario entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_DetalleInventario(DetalleInventario entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovimientosDinero")]
	public partial class MovimientosDinero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Movimiento;
		
		private System.Nullable<decimal> _MontoTotal;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnMovimientoChanging(string value);
    partial void OnMovimientoChanged();
    partial void OnMontoTotalChanging(System.Nullable<decimal> value);
    partial void OnMontoTotalChanged();
    #endregion
		
		public MovimientosDinero()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movimiento", DbType="VarChar(50)")]
		public string Movimiento
		{
			get
			{
				return this._Movimiento;
			}
			set
			{
				if ((this._Movimiento != value))
				{
					this.OnMovimientoChanging(value);
					this.SendPropertyChanging();
					this._Movimiento = value;
					this.SendPropertyChanged("Movimiento");
					this.OnMovimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoTotal", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> MontoTotal
		{
			get
			{
				return this._MontoTotal;
			}
			set
			{
				if ((this._MontoTotal != value))
				{
					this.OnMontoTotalChanging(value);
					this.SendPropertyChanging();
					this._MontoTotal = value;
					this.SendPropertyChanged("MontoTotal");
					this.OnMontoTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventario")]
	public partial class Inventario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Inventario;
		
		private System.DateTime _Fecha_Registro;
		
		private string _Observaciones;
		
		private decimal _Importe;
		
		private decimal _IVA;
		
		private decimal _Total;
		
		private System.Nullable<int> _ID_Proveedor;
		
		private EntitySet<DetalleInventario> _DetalleInventario;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_InventarioChanging(int value);
    partial void OnID_InventarioChanged();
    partial void OnFecha_RegistroChanging(System.DateTime value);
    partial void OnFecha_RegistroChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnImporteChanging(decimal value);
    partial void OnImporteChanged();
    partial void OnIVAChanging(decimal value);
    partial void OnIVAChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnID_ProveedorChanging(System.Nullable<int> value);
    partial void OnID_ProveedorChanged();
    #endregion
		
		public Inventario()
		{
			this._DetalleInventario = new EntitySet<DetalleInventario>(new Action<DetalleInventario>(this.attach_DetalleInventario), new Action<DetalleInventario>(this.detach_DetalleInventario));
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inventario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Inventario
		{
			get
			{
				return this._ID_Inventario;
			}
			set
			{
				if ((this._ID_Inventario != value))
				{
					this.OnID_InventarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Inventario = value;
					this.SendPropertyChanged("ID_Inventario");
					this.OnID_InventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Registro", DbType="Date NOT NULL")]
		public System.DateTime Fecha_Registro
		{
			get
			{
				return this._Fecha_Registro;
			}
			set
			{
				if ((this._Fecha_Registro != value))
				{
					this.OnFecha_RegistroChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Registro = value;
					this.SendPropertyChanged("Fecha_Registro");
					this.OnFecha_RegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observaciones", DbType="VarChar(255)")]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importe", DbType="Decimal(10,2) NOT NULL")]
		public decimal Importe
		{
			get
			{
				return this._Importe;
			}
			set
			{
				if ((this._Importe != value))
				{
					this.OnImporteChanging(value);
					this.SendPropertyChanging();
					this._Importe = value;
					this.SendPropertyChanged("Importe");
					this.OnImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVA", DbType="Decimal(10,2) NOT NULL")]
		public decimal IVA
		{
			get
			{
				return this._IVA;
			}
			set
			{
				if ((this._IVA != value))
				{
					this.OnIVAChanging(value);
					this.SendPropertyChanging();
					this._IVA = value;
					this.SendPropertyChanged("IVA");
					this.OnIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proveedor", DbType="Int")]
		public System.Nullable<int> ID_Proveedor
		{
			get
			{
				return this._ID_Proveedor;
			}
			set
			{
				if ((this._ID_Proveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProveedorChanging(value);
					this.SendPropertyChanging();
					this._ID_Proveedor = value;
					this.SendPropertyChanged("ID_Proveedor");
					this.OnID_ProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventario_DetalleInventario", Storage="_DetalleInventario", ThisKey="ID_Inventario", OtherKey="ID_Inventario")]
		public EntitySet<DetalleInventario> DetalleInventario
		{
			get
			{
				return this._DetalleInventario;
			}
			set
			{
				this._DetalleInventario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Inventario", Storage="_Proveedor", ThisKey="ID_Proveedor", OtherKey="ID_Proveedor", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Inventario.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Inventario.Add(this);
						this._ID_Proveedor = value.ID_Proveedor;
					}
					else
					{
						this._ID_Proveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleInventario(DetalleInventario entity)
		{
			this.SendPropertyChanging();
			entity.Inventario = this;
		}
		
		private void detach_DetalleInventario(DetalleInventario entity)
		{
			this.SendPropertyChanging();
			entity.Inventario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleVenta")]
	public partial class DetalleVenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Venta;
		
		private int _ID_Producto;
		
		private int _Cantidad;
		
		private decimal _Precio_Unitario;
		
		private decimal _Subtotal;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_VentaChanging(int value);
    partial void OnID_VentaChanged();
    partial void OnID_ProductoChanging(int value);
    partial void OnID_ProductoChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecio_UnitarioChanging(decimal value);
    partial void OnPrecio_UnitarioChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    #endregion
		
		public DetalleVenta()
		{
			this._Producto = default(EntityRef<Producto>);
			this._Venta = default(EntityRef<Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Venta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Venta
		{
			get
			{
				return this._ID_Venta;
			}
			set
			{
				if ((this._ID_Venta != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VentaChanging(value);
					this.SendPropertyChanging();
					this._ID_Venta = value;
					this.SendPropertyChanged("ID_Venta");
					this.OnID_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_Unitario", DbType="Decimal(10,2) NOT NULL")]
		public decimal Precio_Unitario
		{
			get
			{
				return this._Precio_Unitario;
			}
			set
			{
				if ((this._Precio_Unitario != value))
				{
					this.OnPrecio_UnitarioChanging(value);
					this.SendPropertyChanging();
					this._Precio_Unitario = value;
					this.SendPropertyChanged("Precio_Unitario");
					this.OnPrecio_UnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(10,2) NOT NULL")]
		public decimal Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleVenta", Storage="_Producto", ThisKey="ID_Producto", OtherKey="ID_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.DetalleVenta.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.DetalleVenta.Add(this);
						this._ID_Producto = value.ID_Producto;
					}
					else
					{
						this._ID_Producto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_DetalleVenta", Storage="_Venta", ThisKey="ID_Venta", OtherKey="ID_Venta", IsForeignKey=true)]
		public Venta Venta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				Venta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.DetalleVenta.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.DetalleVenta.Add(this);
						this._ID_Venta = value.ID_Venta;
					}
					else
					{
						this._ID_Venta = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleInventario")]
	public partial class DetalleInventario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Detalle_Inventario;
		
		private System.Nullable<int> _ID_Inventario;
		
		private System.Nullable<int> _ID_Producto;
		
		private int _Cantidad_Entrante;
		
		private decimal _Costo_Unitario;
		
		private decimal _Subtotal;
		
		private EntityRef<Inventario> _Inventario;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Detalle_InventarioChanging(int value);
    partial void OnID_Detalle_InventarioChanged();
    partial void OnID_InventarioChanging(System.Nullable<int> value);
    partial void OnID_InventarioChanged();
    partial void OnID_ProductoChanging(System.Nullable<int> value);
    partial void OnID_ProductoChanged();
    partial void OnCantidad_EntranteChanging(int value);
    partial void OnCantidad_EntranteChanged();
    partial void OnCosto_UnitarioChanging(decimal value);
    partial void OnCosto_UnitarioChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    #endregion
		
		public DetalleInventario()
		{
			this._Inventario = default(EntityRef<Inventario>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Detalle_Inventario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Detalle_Inventario
		{
			get
			{
				return this._ID_Detalle_Inventario;
			}
			set
			{
				if ((this._ID_Detalle_Inventario != value))
				{
					this.OnID_Detalle_InventarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Detalle_Inventario = value;
					this.SendPropertyChanged("ID_Detalle_Inventario");
					this.OnID_Detalle_InventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inventario", DbType="Int")]
		public System.Nullable<int> ID_Inventario
		{
			get
			{
				return this._ID_Inventario;
			}
			set
			{
				if ((this._ID_Inventario != value))
				{
					if (this._Inventario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InventarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Inventario = value;
					this.SendPropertyChanged("ID_Inventario");
					this.OnID_InventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", DbType="Int")]
		public System.Nullable<int> ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad_Entrante", DbType="Int NOT NULL")]
		public int Cantidad_Entrante
		{
			get
			{
				return this._Cantidad_Entrante;
			}
			set
			{
				if ((this._Cantidad_Entrante != value))
				{
					this.OnCantidad_EntranteChanging(value);
					this.SendPropertyChanging();
					this._Cantidad_Entrante = value;
					this.SendPropertyChanged("Cantidad_Entrante");
					this.OnCantidad_EntranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo_Unitario", DbType="Decimal(10,2) NOT NULL")]
		public decimal Costo_Unitario
		{
			get
			{
				return this._Costo_Unitario;
			}
			set
			{
				if ((this._Costo_Unitario != value))
				{
					this.OnCosto_UnitarioChanging(value);
					this.SendPropertyChanging();
					this._Costo_Unitario = value;
					this.SendPropertyChanged("Costo_Unitario");
					this.OnCosto_UnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(10,2) NOT NULL")]
		public decimal Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventario_DetalleInventario", Storage="_Inventario", ThisKey="ID_Inventario", OtherKey="ID_Inventario", IsForeignKey=true)]
		public Inventario Inventario
		{
			get
			{
				return this._Inventario.Entity;
			}
			set
			{
				Inventario previousValue = this._Inventario.Entity;
				if (((previousValue != value) 
							|| (this._Inventario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventario.Entity = null;
						previousValue.DetalleInventario.Remove(this);
					}
					this._Inventario.Entity = value;
					if ((value != null))
					{
						value.DetalleInventario.Add(this);
						this._ID_Inventario = value.ID_Inventario;
					}
					else
					{
						this._ID_Inventario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inventario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleInventario", Storage="_Producto", ThisKey="ID_Producto", OtherKey="ID_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.DetalleInventario.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.DetalleInventario.Add(this);
						this._ID_Producto = value.ID_Producto;
					}
					else
					{
						this._ID_Producto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Cliente;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private EntitySet<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClienteChanging(int value);
    partial void OnID_ClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
		
		public Cliente()
		{
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(255)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Venta", ThisKey="ID_Cliente", OtherKey="ID_Cliente")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auditoria")]
	public partial class Auditoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Auditoria;
		
		private string _Usuario_SQL;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Tabla_Afectada;
		
		private System.Nullable<int> _Folio_Eliminado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AuditoriaChanging(int value);
    partial void OnID_AuditoriaChanged();
    partial void OnUsuario_SQLChanging(string value);
    partial void OnUsuario_SQLChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnTabla_AfectadaChanging(string value);
    partial void OnTabla_AfectadaChanged();
    partial void OnFolio_EliminadoChanging(System.Nullable<int> value);
    partial void OnFolio_EliminadoChanged();
    #endregion
		
		public Auditoria()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Auditoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Auditoria
		{
			get
			{
				return this._ID_Auditoria;
			}
			set
			{
				if ((this._ID_Auditoria != value))
				{
					this.OnID_AuditoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Auditoria = value;
					this.SendPropertyChanged("ID_Auditoria");
					this.OnID_AuditoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_SQL", DbType="VarChar(100)")]
		public string Usuario_SQL
		{
			get
			{
				return this._Usuario_SQL;
			}
			set
			{
				if ((this._Usuario_SQL != value))
				{
					this.OnUsuario_SQLChanging(value);
					this.SendPropertyChanging();
					this._Usuario_SQL = value;
					this.SendPropertyChanged("Usuario_SQL");
					this.OnUsuario_SQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabla_Afectada", DbType="VarChar(100)")]
		public string Tabla_Afectada
		{
			get
			{
				return this._Tabla_Afectada;
			}
			set
			{
				if ((this._Tabla_Afectada != value))
				{
					this.OnTabla_AfectadaChanging(value);
					this.SendPropertyChanging();
					this._Tabla_Afectada = value;
					this.SendPropertyChanged("Tabla_Afectada");
					this.OnTabla_AfectadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folio_Eliminado", DbType="Int")]
		public System.Nullable<int> Folio_Eliminado
		{
			get
			{
				return this._Folio_Eliminado;
			}
			set
			{
				if ((this._Folio_Eliminado != value))
				{
					this.OnFolio_EliminadoChanging(value);
					this.SendPropertyChanging();
					this._Folio_Eliminado = value;
					this.SendPropertyChanged("Folio_Eliminado");
					this.OnFolio_EliminadoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
